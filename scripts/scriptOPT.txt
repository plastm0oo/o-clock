document.addEventListener('DOMContentLoaded', () => {
    const addTaskButton = document.getElementById('add-task');
    const tasksContainer = document.getElementById('tasks');
    let taskIdCounter = 0; //счетчик для уникальных идентификаторов задач

    //открытие новой строки задачи
    addTaskButton.addEventListener('click', () => {
        addNewTask();
    });

    function addNewTask() {
        //создание элемента строки задачи
        const taskElement = document.createElement('div');
        taskElement.classList.add('task');
        taskElement.dataset.taskId = `task-${taskIdCounter}`; //уникальный идентификатор для задачи
        taskIdCounter++;

        const categoryElement = document.createElement('div');
        categoryElement.classList.add('category');
        categoryElement.classList.add('gray');
        categoryElement.dataset.taskId = taskElement.dataset.taskId; //привязка к задаче
        categoryElement.addEventListener('click', (event) => {
            if (isEditing(taskElement)) {
                showColorPicker(event.currentTarget);
            }
        }); 

        //поле времени
        const timeElement = document.createElement('div');
        timeElement.classList.add('time');
        
        const startTimeHour = createTimeInput('12', 23);
        const startTimeMinute = createTimeInput('00', 59);
        const endTimeHour = createTimeInput('13', 23);
        const endTimeMinute = createTimeInput('30', 59);

        const descriptionInput = document.createElement('input');
        descriptionInput.setAttribute('type', 'text');
        descriptionInput.setAttribute('placeholder', 'Описание задачи');

        // Добавляем обработчик нажатия клавиши Enter для подтверждения задачи
        const confirmButton = document.createElement('button');
        confirmButton.innerHTML = `
            <svg xmlns="http://www.w3.org/2000/svg" width="17" height="14" fill="none">
                <path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="m2.111 7.317 3.943 4.929 9.2-9.857"/>
            </svg>
        `;
        confirmButton.classList.add('accept');
        confirmButton.addEventListener('click', () => {
            saveTask(categoryElement, startTimeHour.value, startTimeMinute.value, endTimeHour.value, endTimeMinute.value, descriptionInput.value, taskElement);
        });

        // Функция для обработки нажатия Enter
        const handleEnterKeyPress = (event) => {
            if (event.key === 'Enter') {
                event.preventDefault();
                confirmButton.click();
            }
        };

        // Добавляем обработчик нажатия клавиши Enter для всех полей ввода
        startTimeHour.addEventListener('keypress', handleEnterKeyPress);
        startTimeMinute.addEventListener('keypress', handleEnterKeyPress);
        endTimeHour.addEventListener('keypress', handleEnterKeyPress);
        endTimeMinute.addEventListener('keypress', handleEnterKeyPress);
        descriptionInput.addEventListener('keypress', handleEnterKeyPress);

        //автоматический переход на другое окно
        startTimeHour.addEventListener('input', () => autoMove(startTimeHour, startTimeMinute));
        startTimeMinute.addEventListener('input', () => autoMove(startTimeMinute, endTimeHour));
        endTimeHour.addEventListener('input', () => autoMove(endTimeHour, endTimeMinute));
        endTimeMinute.addEventListener('input', () => autoMove(endTimeMinute, descriptionInput));

        
        timeElement.appendChild(startTimeHour);
        timeElement.appendChild(createSeparator(':', 'colon'));
        timeElement.appendChild(startTimeMinute);
        timeElement.appendChild(createSeparator(' - ', 'dash'));
        timeElement.appendChild(endTimeHour);
        timeElement.appendChild(createSeparator(':', 'colon'));
        timeElement.appendChild(endTimeMinute);

        const descriptionElement = document.createElement('div');
        descriptionElement.classList.add('description');
        descriptionElement.appendChild(descriptionInput);

        //создание контейнера для кнопок
        const buttonContainer = document.createElement('div');
        buttonContainer.classList.add('button-container');

        const cancelButton = document.createElement('button');
        cancelButton.innerHTML = `
            <svg xmlns="http://www.w3.org/2000/svg" width="17" height="17" fill="none">
                <path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="m2 15 6.5-6.5M15 2 8.5 8.5m0 0L15 15M8.5 8.5 2 2"/>
            </svg>
        `;
        cancelButton.classList.add('cancel');
        cancelButton.addEventListener('click', () => {
            tasksContainer.removeChild(taskElement);
        });

        //добавление кнопок в контейнер
        buttonContainer.appendChild(confirmButton);
        buttonContainer.appendChild(cancelButton);

        //добавление элементов в строку задачи
        taskElement.appendChild(categoryElement);
        taskElement.appendChild(timeElement);
        taskElement.appendChild(descriptionElement);
        taskElement.appendChild(buttonContainer);

        //добавление строки задачи в контейнер задач
        tasksContainer.appendChild(taskElement);
    }

    // Остальные функции остаются без изменений
    // ...
});